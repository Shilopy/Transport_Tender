# requirements.txt для приложения Transport Tender

# Основной веб-фреймворк
streamlit>=1.29.0

# Работа с данными и Excel
pandas>=1.5.3
openpyxl>=3.1.2 # Для чтения/записи Excel файлов (.xlsx) с pandas
xlsxwriter>=3.2.5
# Взаимодействие с Microsoft Outlook (через COM объекты Windows)
pywin32>=306

# Работа с JSON и кэширование (встроенные, но pywin32 требует pythoncom)
# pythoncom - часть pywin32

# Работа с регулярными выражениями (встроенная библиотека)
# re - встроенная

# Выполнение HTTP-запросов
requests>=2.31.0

# Работа с кэшированием (functools встроенная, lru_cache из неё)
# functools - встроенная
# lru_cache - из functools

# Работа с бинарными данными и временными файлами (встроенные)
# io - встроенная
# tempfile - встроенная
# shutil - встроенная
# os - встроенная (упоминается в коде)
# json - встроенная (упоминается в коде)
# datetime - встроенная (упоминается в коде)

# Генерация документов Word из шаблонов
docxtpl>=0.16.7

# Работа со временем и задержками (встроенная)
# time - встроенная

# Для работы с бинарными данными BytesIO (встроенный модуль io)
# BytesIO - из io

# Для работы с регулярными выражениями (встроенная)
# re - встроенная

# Для работы с системными путями (встроенная)
# os - встроенная

# Для работы с датами и временем (встроенная)
# datetime - встроенная

# Для работы с JSON (встроенная)
# json - встроенная

# Для кэширования (встроенная)
# functools - встроенная

# Для работы с URL и сетевыми запросами
# requests - указан выше

# Для работы с Microsoft COM объектами
# pywin32 - указан выше

# Для работы с Excel
# openpyxl - указан выше

# Для работы с Word
# docxtpl - указан выше

# Для работы с веб-интерфейсом
# streamlit - указан выше

# Для работы с данными
# pandas - указан выше